global !p
def date():
	from datetime import date
	return date.today().strftime("%B %d, %Y")

def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

endglobal

snippet frac "fractions" 'i'
\frac{$1}{$2} $0
endsnippet

snippet beg
\begin{$1}
	$0
\end{$1}
endsnippet

snippet enum
\begin{enumerate}[label = ${1:\arabic*)}]
	$0 ~\\
\end{enumerate}
endsnippet

snippet	dfn
\begin{definition}[$1] ~\\\\
	$0
\end{definition}
endsnippet

snippet	ex
\begin{example} ~\\
	$0
\end{example}
endsnippet

snippet	thm
\begin{theorem}[$1] ~\\\\
	$0
\end{theorem}
endsnippet

snippet	lem
\begin{lemma} ~\\\\
	$0
\end{lemma}
endsnippet

snippet	rmk
\begin{remark} ~\\\\
	$0
\end{remark}
endsnippet

snippet	cor
\begin{corollary} ~\\\\
	$0
\end{corollary}
endsnippet

snippet sec
\pagebreak
\section{`!p snip.rv = date()`}
$0
endsnippet

snippet prob "New Problem"
\pagebreak
\section*{Problem $1}
$0
endsnippet

snippet md "Math" wA
$${1}$$0
endsnippet

priority 1
snippet dm "Math" wbA
\begin{align*}
$0
\end{align*}
endsnippet

priority 0
snippet dm "Math" wA

\begin{align*}
$0
\end{align*}
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wr
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet td "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet dt "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

priority 0
snippet plist "New Problem in List"
\pagebreak
\setcounter{enumi}{$1}
\item
$0
endsnippet

snippet it "italicize"
\textit{$0}
endsnippet

snippet vv "overline" iA
\\overline{$1}$0
endsnippet

snippet ;p "macron" iA
\\=$0
endsnippet

snippet uu "underline" iA
\\underline{$1}$0
endsnippet

context "math()"
snippet right "Right bold arrow" A
\\Rightarrow
endsnippet

context "math()"
snippet left "Left bold arrow" A
\\Leftarrow
endsnippet

context "math()"
snippet to "to" A
\\to
endsnippet

context "math()"
snippet mapsto "mapsto" A
\\mapsto
endsnippet

context "math()"
snippet ito "injective to" A
\\hookrightarrow
endsnippet

context "math()"
snippet sto "surjective to" A
\\twoheadrightarrow
endsnippet

context "math()"
snippet bto "bijective to" A
\\leftrightarrow
endsnippet

context "math()"
snippet iff "if and only if" iA
\\Leftrightarrow
endsnippet
